)]}'
{"version":3,"file":"/packages/iron-router-progress.js","sources":["iron-router-progress/progress.coffee"],"names":[],"mappings":"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","sourcesContent":["class IronRouterProgress\n\t# Internal variables\n\t@percent : 0\n\t@isReady : false\n\t@isDone  : false\n\t@element : false\n\n\t# Options\n\t@options        : {}\n\t@currentOptions : {}\n\n\t# Set our @options, by extending our old ones - Can be called multiple times\n\t@configure : (options = {}) ->\n\t\tif _.isObject options\n\t\t\t_.extend @options, options\n\t\t\t@currentOptions = _.clone @options\n\t\t@\n\n\t@prepare : ->\n\t\treturn if @isReady\n\n\t\t@element = $ if _.isFunction @options.element then @options.element.call @ else @options.element\n\n\t\t# When the transition ends, and we're actually done with the progres, simply reset it\n\t\t@element.on 'transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', (e) =>\n\t\t\t# Only reset, if this is the last transition, and that it's not a psuedo selector, such as `:before` and `:after`\n\t\t\t# Due to the open nature, of the CSS, I want people to be able to do whatever they like, and as such\n\t\t\t# simply expecting opacity to reach zero, or specific propertyName to execute won't suffice\n\t\t\t# A more elegant solution should be added, as not all browsers may support transition-property\n\t\t\t# witout their vendor prefixes\n\t\t\t@reset() if e.originalEvent.pseudoElement is '' and e.originalEvent.propertyName is _.last @element.css('transition-property').split ', '\n\n\t\t@isReady = true\n\t\t$('body').append @element\n\t\t@\n\n\t# Usually called by @start, but can also be called to simply stop the progress\n\t@reset : ->\n\t\tif @isReady\n\t\t\tclearTimeout @ticker\n\t\t\t@percent = 0\n\t\t\t@isDone  = false\n\t\t\t\n\t\t\t@currentOptions.reset.call @\n\t\t@\n\n\t# Starts a new progress\n\t@start : (options = {}) ->\n\t\t@currentOptions = _.extend {}, @options, options if _.isObject options\n\n\t\tif @isReady\n\t\t\t@reset()\n\t\t\tif @currentOptions.enabled\n\t\t\t\t@progress()\n\t\t\t\n\t\t\t\t@tick() if @currentOptions.tick\n\t\t@\n\n\t@tick : ->\n\t\t@ticker = setTimeout =>\n\t\t\t@progress()\n\t\t\t@tick()\n\t\t, Math.random() * 750 + 750\n\t\t@\n\n\t# Adds `progress` or a random percent to the progress bar\n\t@progress : (progress = false) ->\n\t\t# XX We need a better random number generation here\n\t\t@percent += if progress then progress else (100 - @percent) * (Math.random() * 0.45 + 0.05) | 0\n\n\t\t# If the progress is 100% or more, set it to be done\n\t\treturn @done() if @percent >= 100\n\n\t\t@currentOptions.progress.call @\n\t\t@\n\n\t# Completes the progress by setting the progress to 100%\n\t@done : ->\n\t\tif @isReady and not @isDone\n\t\t\tclearTimeout @ticker\n\n\t\t\t@percent = 100\n\t\t\t@isDone  = true\n\n\t\t\t@currentOptions.done.call @\n\t\t@\n\n# Default options\nIronRouterProgress.configure\n\telement : \"\"\"<div id=\"iron-router-progress\"></div>\"\"\"\n\tspinner : true\n\ttick    : true\n\tenabled : true\n\n\t# Callbacks\n\t# Resets the transition\n\treset : ->\n\t\t@element.removeClass 'loading done'\n\t\t@element.css 'width', '0%'\n\t\t@element.toggleClass 'spinner', @currentOptions.spinner\n\n\t\t# Hack to reset the CSS transition\n\t\t@element[0].offsetWidth = @element[0].offsetWidth\n\t\t@\n\n\tprogress : ->\n\t\t@element.addClass 'loading'\n\t\t@element.removeClass 'done'\n\t\t@element.css 'width', \"#{@percent}%\" if @element\n\t\t@\n\n\tdone : ->\n\t\t@element.addClass 'done'\n\t\t@element.css 'width', '100%'\n\t\t@\n\nRouter.onRun ->\n\t# Take the options from the route, if any\n\tIronRouterProgress.start @route.options?.progress or {}\n\t@\n\nRouter.onBeforeAction (pause) ->\n\tif @ready()\n\t\tIronRouterProgress.done()\n\telse\n\t\tIronRouterProgress.progress()\n\t\tif _.isFunction pause\n\t\t\tpause()\n\t\telse\n\t\t\t@stop()\n\t@\n\nRouter.onAfterAction ->\n\tIronRouterProgress.done()\n\t@\n\nRouter.onStop ->\n\tIronRouterProgress.reset()\n\t@\n\n# Prepare our DOM-element when jQuery is ready\n$ -> IronRouterProgress.prepare()\n"]}